/*
* File:        maticsoft.waterfall.js
* Author:      yaoy@maticsoft.com
* Copyright © 2004-2013 Maticsoft. All Rights Reserved.
*/$(function () { waterFall.ScrollTop = document.documentElement.scrollTop || document.body.scrollTop });
var waterFall = {
    AjaxOptions: { Type: "POST", Params: {}, DataURL: null, Async: !0, DataType: "html", Success: null, Error: null },
    CurrentAjaxStartIndexHF: null,
    PageIndex: 0,
    EndIndex: 0,
    PagedContainer: null,
    ColumnFirstId: null,
    ColumnNumber: 3,
    //一行一次显示4条数据，计算StartIndex相关内容,和后台保持一致
    PageSize:4,
    RowNumber: 0,
    LoadDataCount: 1,
    ScrollTop: 0,
    EntryCount:0,
    //默认为false
    LoadFinish: !1,
    //阶段性触发
    ScrollTrigger: 300,
    //滚动事件定义
    scroll: function () {
        return $(window).scroll(function ()
        {           
            var e = document.documentElement.scrollTop || document.body.scrollTop; 
           
            //alert("触发"+waterFall.StartIndex);
            //当前的滚动减去原有的，当滚动超过100时触发， 现在的高度减去原来的高度，大于触发高度
            //!waterFall.LoadFinish && Math.abs(e - waterFall.ScrollTop) > waterFall.ScrollTrigger && (waterFall.ScrollTop = e, $("#divResult").html("进入次数为：" + (++waterFall.EntryCount)), waterFall.appendDetect())
            !waterFall.LoadFinish && Math.abs(e - waterFall.ScrollTop) > waterFall.ScrollTrigger && (waterFall.ScrollTop = e, waterFall.appendDetect())
        }), 
            this
    },
    appendDetect: function () {
        var e;
        //数据容器ul
        e = document.getElementById(waterFall.ColumnFirstId);
        //未装载完成时，到达一屏时,clientHeight高度是不断增加的。 e.ClientHeight是变量   ScrollTop是变量， 小于说明滚动到了底部
        if (e && !waterFall.LoadFinish && e.offsetTop + e.clientHeight - 180 < waterFall.ScrollTop + (window.innerHeight || document.documentElement.clientHeight)) {
            
            //一行是一个数据，一次请求4行数据
            waterFall.append(e);
            //if (waterFall.RowNumber && waterFall.RowNumber > 1)
            //    for (var n = 2; n < waterFall.RowNumber; n++)
            //        waterFall.append(e)
        }
        //if (waterFall.ColumnNumber) {
        //    var t = 0;
        //    for (t; t < waterFall.ColumnNumber; t++)
        //        e = document.getElementById(waterFall.ColumnFirstId + t), e && !waterFall.LoadFinish && e.offsetTop + e.clientHeight < waterFall.ScrollTop + (window.innerHeight || document.documentElement.clientHeight) && waterFall.append(e)
        //} else {
            
        //} return this
    },
    //从远程获取数据，然后附加到数据容器后面，每请求一次开始位置加1，应该是加pagesize的数量才对？
    append: function (e) {
        
        // if (waterFall.StartIndex >= waterFall.EndIndex) return waterFall.LoadFinish = !0, waterFall.PagedContainer.show(), this;
        //$("#divResult2").html("准备加载远程数据次数：" + (waterFall.LoadDataCount));
        //$("#divResult").html("waterFall.StartIndex:"+ waterFall.StartIndex); 
      // alert(parseInt(waterFall.StartIndex));
        waterFall.StartIndex = parseInt(waterFall.StartIndex) + parseInt(!waterFall.LoadDataCount ? 0 : waterFall.PageSize);
       // $("#divResult2").html( $("#divResult2").html() + "执行索引为："+waterFall.StartIndex);
        //结束数据位置
        waterFall.LoadDataCount += 1
        var t = { PageIndex: waterFall.LoadDataCount };
        
        //加载数据次数，从0开始
        return  waterFall.CurrentAjaxStartIndexHF.val(waterFall.StartIndex),
            $.ajax(
            {
                type: waterFall.AjaxOptions.Type,
                url: waterFall.AjaxOptions.DataURL,
                async: waterFall.AjaxOptions.Async,
                //返回html代码
                dataType: waterFall.AjaxOptions.DataType,
                data: $.extend(waterFall.AjaxOptions.Params, t),
                success: function (t) {
                    //空数据时显示分页数据
                    if (!t)
                    {
                        //alert("数据获取为空");
                         waterFall.LoadFinish = !0, waterFall.PagedContainer.show();
                        return
                    }                  
                    //追加到后面
                    var n = $(t);
                    $(e).append(n), waterFall.AjaxOptions.Success && waterFall.AjaxOptions.Success.call(n)
                },
                error: function (e, t, n, r) { waterFall.AjaxOptions.Error && waterFall.AjaxOptions.Error.call(e, t, n, r) }
            }),
            waterFall.StartIndex >= waterFall.EndIndex ? (waterFall.LoadFinish = !0, waterFall.PagedContainer.show(), this) : this
    },
    refresh: function () { return waterFall.appendDetect(), this },
    resize: function () {
        return window.onresize = function ()
        { waterFall.refresh() }, this
    },
    init: function (e) {
        var t = {
            AjaxOptions: {
                Params: {
                    AlbumId: $.getUrlParam("AlbumID")
                },
                DataURL: "WaterfallPhotoListData"
            },
            CurrentAjaxStartIndexHF: $("#hfCurrentPageAjaxStartIndex"),
            StartIndex: $("#hfCurrentPageAjaxStartIndex").val() ? parseInt($("#hfCurrentPageAjaxStartIndex").val()) : 0,
            EndIndex: $("#hfCurrentPageAjaxEndIndex").val() ? parseInt($("#hfCurrentPageAjaxEndIndex").val()) : 0,
            PagedContainer: $(".in_pages"),
            //数据容器
            ColumnFirstId: "col_",
            ColumnNumber: 3,
            RowNumber: 0,
            ScrollTrigger: 100
        };
        e && (t = $.extend(t, e)), t.PagedContainer.hide();
        //没有内容返回
        if (t.CurrentAjaxStartIndexHF.length == 0) return;
        if (t.StartIndex == 0 || t.EndIndex == 0) return;
        this.CurrentAjaxStartIndexHF = t.CurrentAjaxStartIndexHF,
        this.ColumnFirstId = t.ColumnFirstId,
        this.ColumnNumber = t.ColumnNumber,
        this.RowNumber = t.RowNumber,
        this.PagedContainer = t.PagedContainer,
        this.StartIndex = t.StartIndex,
        this.EndIndex = t.EndIndex,
        this.AjaxOptions = $.extend(this.AjaxOptions, t.AjaxOptions),
        this.StartIndex && this.ColumnFirstId && ($(document).scrollTop(0),this.LoadFinish = !1,this.scroll())
    }
};